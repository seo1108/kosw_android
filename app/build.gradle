import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "kr.co.photointerior.kosw.app"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 40013
        versionName "4.0.13"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file("../docs/kosw.keystore")
            storePassword "kosw!3@4"
            keyAlias "photointerior"
            keyPassword "kosw!3@4"
        }
//        config{
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
    }

    buildTypes {
        release {
            shrinkResources false
            zipAlignEnabled true
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                def df = new SimpleDateFormat("yyMMddHHmm")
                df.setTimeZone(TimeZone.getDefault())

                def file = output.outputFile

                //def newName = "${defaultConfig.applicationId}_${defaultConfig.versionName}-${df.format(new Date())}.apk"
                def newName = "ks_${defaultConfig.versionName}-${df.format(new Date())}.apk"
                //outputFileName = new File(file.parent, newName)
                outputFileName = new File("../release", newName)
                //System.out.print(outputFileName)
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:support-media-compat:28.0.0'
    implementation 'com.android.support:animated-vector-drawable:28.0.0'
    implementation 'com.android.support:customtabs:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation "com.android.support:design:28.0.0"
    implementation "com.android.support:cardview-v7:28.0.0"

    implementation 'com.google.firebase:firebase-messaging:17.3.0'
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-crash:16.0.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'

    testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'pub.devrel:easypermissions:1.3.0'

    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.3.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'

    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    //implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation("com.github.bumptech.glide:glide:4.7.1@aar") {
        transitive = true
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
//    implementation('com.faendir:acra:4.9.3') {
//        exclude group: 'com.android.support'
//        exclude module: 'appcompat-v7'
//        exclude module: 'support-v4'
//        exclude module: 'support-media-compat'
//    }

    implementation('com.github.bumptech.glide:okhttp3-integration:4.0.0') {
        exclude group: 'glide-parent'
    }

    implementation 'org.altbeacon:android-beacon-library:2.14'
    implementation 'com.squareup:otto:1.3.7'
    implementation "me.leolin:ShortcutBadger:1.1.21@aar"
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    implementation 'com.google.android.gms:play-services-location:15.0.1'
    implementation 'com.google.android.gms:play-services-places:15.0.1'

    implementation 'com.google.firebase:firebase-auth:16.0.1'
    implementation 'com.google.android.gms:play-services-auth:15.0.1'

    implementation 'com.google.android.gms:play-services-fitness:15.0.0'

    implementation 'com.jakewharton:butterknife:7.0.1'
    annotationProcessor 'com.jakewharton:butterknife:7.0.1'

    implementation 'com.squareup.picasso:picasso:2.5.2'

    // 카카오 로그인 sdk를 사용하기 위해 필요.
    implementation group: 'com.kakao.sdk', name: 'usermgmt', version: project.KAKAO_SDK_VERSION

}

repositories {
    mavenCentral()
    maven { url 'https://maven.google.com'
        name 'Google' }
    jcenter()
    maven {
        url 'https://mvnrepository.com/artifact/com.android.tools.lint/lint-gradle-api'
    }
}

apply plugin: 'com.google.gms.google-services'
